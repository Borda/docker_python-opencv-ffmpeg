version: 2.1
references:

  build_image: &build_image
    run:
      name: Build Docker Image
      command: |
        echo $IMAGE && echo $PYTHON
        docker build -t $IMAGE:py${PYTHON} -f ${DEVICE}/Dockerfile --build-arg PYTHON_VERSION=$PYTHON --build-arg OPENCV_VERSION=$OPENCV .
      no_output_timeout: 40m

  test_image: &test_image
    run:
      name: Sample run...
      command: |
        docker image ls
        docker run -i -t $IMAGE:py${PYTHON} python -c "import sys, cv2 ; print('python: %r' % sys.version) ; print('OpenCV: %r' % cv2.__version__)"

  publish_image: &publish_image
    run:
      name: Publish Image to Docker Hub
      command: |
        # push only if the DOCKERHUB credentials are given, also limit pushes only from master branch
        if [[ "$DOCKERHUB_USERNAME" != "" && "$CIRCLE_BRANCH" == "master" ]]; then
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          # docker tag local-image:tagname user-name/new-repo:tagname
          docker tag $IMAGE:py${PYTHON} $DOCKERHUB_USERNAME/docker_python-opencv-ffmpeg:${DEVICE}-py${PYTHON}-cv${OPENCV}
          # docker push user-name/new-repo:tagname
          docker push $DOCKERHUB_USERNAME/docker_python-opencv-ffmpeg
        fi

jobs:
  dockers:
    parameters:
      python:
        type: string
      # device:
      #   type: string
    machine: true
    environment:
      - IMAGE: "ubuntu-opencv"
      - PYTHON: << parameters.python >>
      - OPENCV: "4.6.0"
      # - DEVICE: << parameters.device >>
      - DEVICE: "cpu"
    steps:
      - checkout
      - *build_image
      - *test_image
      - *publish_image

workflows:
  build-dockers:
    jobs:
      - dockers:
          matrix:
            parameters:
              python: ["2.7", "3.6", "3.7", "3.8", "3.9", "3.10"]
              # device: ["cpu", "gpu"]
